@import url('https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@100..900&display=swap');

@import url('https://fonts.googleapis.com/css2?family=Figtree:ital,wght@0,300..900;1,300..900&family=Roboto+Slab:wght@100..900&display=swap');


/*Con el * estoy diciendo que los cambios que haga en esta seccion, seran para
todos los elementos de mi html */
* {
    padding: 0;
    margin: 0;
}
body {
    /*Pinta todo el fondo del contenedor body, de negro*/
    background-color: #442b72;

    /*Mnatengo el color del texto en blanco*/
    color: white;

    /*Lo que hace "box-sizing: border-box;" es que todos los
    elementos que estan dentro de body no se van a derbordar de body*/
    box-sizing: border-box;

}

.header {
    padding: 2% 0% 0% 7%;
    background-color:#1fd02e;
    padding-bottom: 2%;
    justify-content: center;

}

.header_nav {
display: flex;
gap: 80px;

}

.header_link {

    /*Estilizacion y color del texto de los links*/
    font-family: "Roboto Slab", serif;
    font-size: 1.5rem; /* 24px / 16 = 1.5rem */
    font-weight: 600;
    color:#3d1b6a;
    font-weight: 500px; /* Esto es una unidad inválida para font-weight, se mantiene como está */

    /*Quita el subrayado del link*/
    text-decoration: none;
}

/*Siempre que modifico un elemnto html por medio de class en CSS
tego que poner un " . " antes del nombre de la etiqueta class*/
.texto_destacado {
    color: rgb(7, 173, 12);
}

.presentacion {

    /*display: flex convierete mi elemento .presentacion de html en un contenedor flexbos
    lo que me permitira trabajar con el diseño de los elementos que esten dentro de
    .presentacion (los hijos de main) */
    display: flex;

    /*align-items: center centra todos los elementos del contenedor padre*/
    align-items: center;

    /*El primer valor es VERTICAL y el segundo valor es HORIZONTAL*/
    padding: 4% 15%;
    justify-content: space-between;
    
    /*Para crear un espacio entre el body y la imagen*/
    gap:82px;
}

.texto_presentacion {
    width: 50%;
    display: flex;
    flex-direction: column;

    /* se utiliza para especificar el tamaño de los espacios (o "huecos")
    entre filas y columnas en diseños de cuadrícula (grid), flexbox */
    gap: 40px;
}

.titulo_presentacion {
    /*font-size es el tamaño de la fuente*/
    font-size: 3.125rem; /* 50px / 16 = 3.125rem */

    font-family: "Roboto Slab", serif;
}

.parrafo_uno_presentacion {
    /*font-size es el tamaño de la fuenta*/
    font-size: 1.25rem; /* 20px / 16 = 1.25rem */

    font-family: "Roboto Slab", serif;
}

.imagen_presentacion {
    /*Con width y height le digo el tamaño de la imagen*/
    width: 50%;
    height: auto;

    /*Con border-radius le digo que tan curvo quiero que sea el borde de la imagen*/
    border-radius: 1%;

    /*Con object-fit le digo que la imagen se ajuste al contenedor sin deformarse*/
    object-fit: cover;

    /*Con box-shadow le doy una sombra a la imagen*/
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
}

.botones {
    /*display: flex convierte mi elemento .presentacion_enlaces de html en un contenedor
    flexbox para que sea mas sencillo darle estilo */
    display: flex;
    justify-content: space-between;

    /*por defecto, aunque no ponga flex-direction, el pocisionamiento de mis elementos es
    horizonttal, al poner flex-direction: column; pasan a esta en forma de columna*/
    flex-direction: column;

    /*Para centrar mis botones*/
    align-items: center;

    gap: 32px;
}

.enlace_social {

    width: 50%;

    /*text-align: center es para centrar el texto en el boton*/
    text-align: center;

    /*el primer valor es el VERTICAL, el segundo valor el HORIZONTAL*/
    padding: 21.5px 0;

    /*Con border-radius digo que tan curvo quiero que sean mis botones*/
    border-radius: 8px;

    /*Aqui solo estoy dando estilo al texto de los botones*/
    font-family: "Figtree", sans-serif;
    font-size: 1.5rem; /* 24px / 16 = 1.5rem */
    font-weight: 600;

    /*Quita las decoraciones del texto, el subrayado que se pone por defecto en este caso*/
    text-decoration: none;

    color: #1fd02e;
    /*El color del boton sera azul*/

    /*2px es el grosos de los bordes, solid es el diseño del borde, y lo ultimo, es el color
    del borde*/
    border: 2px solid #1fd02e;

    display: flex;
    justify-content: center;
    gap: 10px;



}

/*con :hover hago que cuando el usuario pase el mouse por encia del botos, este cambie de color*/
.enlace_social:hover {
    /*Cuando el usuario pase el mouse por encima del boton, este cambiara de color*/
    background-color: #3d1b6a;
}

.enlaces_subtitulos {
    font-family: 'Courier New', Courier, monospace;
    font-size: 1.5rem; /* 24px / 16 = 1.5rem */
    font-weight: 400;
}

.footer {
    background-color: #1fd02e;
    display: flex;
    justify-content: center;
    padding: 24px;
    color:#3d1b6a;
    font-weight: 700;
    font-size: 1rem; /* 'large' es aproximadamente 16px, 16px / 16 = 1rem */
    font-family: "Roboto Slab", serif;
    height: 50%;

    /*Con las 2 declaraciones siguientes, acomoto tdo el contenido en una columna y
    centro los elementos */
    flex-direction: column;
    align-items: center;

    /*Con gap, agrego espacio entre los elementos*/
    gap: 10px
}

/*con lo siguiente estoy diciendo como quiero que se acomoden los elementos que esten dentro de 
las llaves cuando la pantalla tea de un tamaño indicado, en este caso, 1159px*/
@media (max-width:1159px){

    .header{
        padding: 5%;
    }
    .header_nav{
        justify-content: center;
    }
    .presentacion{
        flex-direction: column-reverse;
        align-items: center;
        padding: 5%;
    }
    .body{
        flex-direction: column;
    }
    .titulo_presentacion{
        text-align:center;
    }

    .texto_presentacion{
        width: auto;
        justify-content: center;
    }
}
